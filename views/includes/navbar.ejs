<nav class="navbar navbar-expand-md sticky-top">
  <div class="container-fluid">
    <!-- Brand -->
    <a class="navbar-brand" href="/">Íï∂·¥ú·¥ç·¥Ä…¥.</a>

    <!-- Small screens: Theme Toggle + Toggler Button -->
    <div class="d-flex d-md-none ms-auto align-items-center">
      <button
        id="themeToggleMobile"
        class="btn btn-outline-dark me-2"
        title="Toggle Dark Mode"
      >
        üåô
      </button>
      <button
        class="custom-toggler"
        type="button"
        data-bs-toggle="collapse"
        data-bs-target="#navbarNavAltMarkup"
        aria-controls="navbarNavAltMarkup"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="bar"></span>
        <span class="bar"></span>
        <span class="bar"></span>
      </button>
    </div>

    <!-- Navbar Links and Theme Toggle (medium and up) -->
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
      <div class="navbar-nav ms-auto align-items-md-center">
        <a class="nav-link" href="#Home">Home</a>
        <a class="nav-link" href="#section2">Experience</a>
        <a class="nav-link" href="#Edu-sec">Education</a>
        <a class="nav-link" href="#Skill-sec">Skills</a>
        <a class="nav-link" href="#Project">Projects</a>
        <a class="nav-link" href="#Certificate">Certificates</a>
        <a class="nav-link" href="#Section3">Contact</a>
      </div>

      <!-- Theme toggle for medium and up -->
      <div class="d-none d-md-block ms-3">
        <button
          id="themeToggle"
          class="btn btn-outline-dark"
          title="Toggle Dark Mode"
        >
          üåô
        </button>
      </div>
    </div>
  </div>
</nav>

<script>
  const themeToggle = document.getElementById("themeToggle");
  const themeToggleMobile = document.getElementById("themeToggleMobile");

  function setThemeIcon(isDark) {
    const icon = isDark ? "üîÜ" : "üåô";
    if (themeToggle) themeToggle.textContent = icon;
    if (themeToggleMobile) themeToggleMobile.textContent = icon;
  }

  // Load saved theme
  const savedTheme = localStorage.getItem("theme");
  if (savedTheme === "dark") {
    document.body.classList.add("dark-theme");
    setThemeIcon(true);
  }

  function toggleTheme() {
    const isDark = document.body.classList.toggle("dark-theme");
    localStorage.setItem("theme", isDark ? "dark" : "light");
    setThemeIcon(isDark);
  }

  themeToggle?.addEventListener("click", toggleTheme);
  themeToggleMobile?.addEventListener("click", toggleTheme);

  document.addEventListener("DOMContentLoaded", function () {
    const navbar = document.querySelector(".navbar");

    document.querySelectorAll(".navbar-nav .nav-link").forEach((link) => {
      link.addEventListener("click", function (e) {
        const targetId = this.getAttribute("href");

        if (targetId && targetId.startsWith("#")) {
          e.preventDefault();

          const targetElement = document.querySelector(targetId);
          if (targetElement) {
            // ‚úÖ Measure navbar height dynamically at click time
            const navbarHeight = navbar.offsetHeight;
            const offsetTop =
              targetElement.getBoundingClientRect().top + window.scrollY;
            const scrollTo = offsetTop - navbarHeight + 65;

            window.scrollTo({
              top: scrollTo,
              behavior: "smooth",
            });
          }

          // ‚úÖ Collapse navbar in mobile/tablet
          const navbarCollapse = document.querySelector(".navbar-collapse");
          if (navbarCollapse.classList.contains("show")) {
            const bsCollapse = bootstrap.Collapse.getInstance(navbarCollapse);
            bsCollapse?.hide();
          }
        }
      });
    });
  });
</script>
